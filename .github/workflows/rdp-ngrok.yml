name: RDP via Ngrok

on:
  workflow_dispatch:

jobs:
  rdp:
    runs-on: windows-latest
    timeout-minutes: 3600

    steps:
      - name: Enable RDP and Configure Firewall
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"

      - name: Create RDP User
        run: |
          $Password = "Rdp@12345" | ConvertTo-SecureString -AsPlainText -Force
          New-LocalUser "RDP" -Password $Password -AccountNeverExpires -PasswordNeverExpires
          Add-LocalGroupMember -Group "Administrators" -Member "RDP"
          Add-LocalGroupMember -Group "Remote Desktop Users" -Member "RDP"

      - name: Download & Extract Ngrok
        run: |
          $ngrokPath = "$env:RUNNER_TEMP\ngrok"
          Invoke-WebRequest -Uri https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-windows-amd64.zip -OutFile "$env:RUNNER_TEMP\ngrok.zip"
          Expand-Archive "$env:RUNNER_TEMP\ngrok.zip" -DestinationPath $ngrokPath
          echo "NGROK_EXE=$ngrokPath\ngrok.exe" >> $env:GITHUB_ENV

      - name: Connect Ngrok Tunnel
        run: |
          & "${{ env.NGROK_EXE }}" authtoken "${{ secrets.NGROK_AUTH_TOKEN }}"
          Start-Process -FilePath "${{ env.NGROK_EXE }}" -ArgumentList "tcp 3389" -WindowStyle Hidden
          Start-Sleep -Seconds 10
          $tunnels = Invoke-RestMethod -Uri http://127.0.0.1:4040/api/tunnels
          $url = $tunnels.tunnels[0].public_url
          echo "======================================="
          echo "RDP CONNECT INFO"
          echo "Address: $url"
          echo "Username: RDP"
          echo "Password: Rdp@12345"
          echo "======================================="
          echo "::notice title=RDP Credentials::Connect using $url | User: RDP | Pass: Rdp@12345"
          while ($true) { Start-Sleep -Seconds 300 }
